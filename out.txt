.expo/web/cache/development/babel-loader/652e35e5ebf7eb1d5beb2ba9b6aa0788.json:{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/mnt/Linux Storage/projects/depic/App.js\";\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Camera } from 'expo-camera';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as MediaLibrary from 'expo-media-library';\nimport * as ImageManipulator from \"expo-image-manipulator\";\nimport { Asset } from \"expo-asset\";\n\nvar config = require(\"./config\");\n\nvar img_background = require(\"./assets/art/home_screen_bg.jpg\");\n\nvar img_title = require(\"./assets/art/depic_title.png\");\n\nvar img_play = require(\"./assets/art/play_icon.png\");\n\nvar img_rules = require(\"./assets/art/instructions_icon.png\");\n\nvar img_scores = require(\"./assets/art/scoreboard_icon.png\");\n\nvar img_skip = require(\"./assets/art/skip_icon.png\");\n\nvar img_take_pic = require(\"./assets/art/take_pic_icon.png\");\n\nvar img_home = require(\"./assets/art/home_icon.png\");\n\nvar img_scorebg = require(\"./assets/art/scoreboard_bg.png\");\n\nvar img_highestScorebg = require(\"./assets/art/highestscoreboard_bg.png\");\n\nvar Clarifai = require('clarifai');\n\nvar CLARIFAI_KEY = config.clarifai.key;\nvar detector = new Clarifai.App({\n  apiKey: CLARIFAI_KEY\n});\nvar predIgnores = [\"no person\", \"abstract\", \"dof\"];\nvar Stack = createStackNavigator();\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(NavigationContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        }\n      }, React.createElement(Stack.Navigator, {\n        screenOptions: {\n          headerStyle: {\n            backgroundColor: \"#EEF4BD\"\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Camera\",\n        component: CameraScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Rules\",\n        component: RulesScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"ScoreEntry\",\n        component: ScoreEntryScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Scores\",\n        component: ScoreScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };\n\nvar HomeScreen = function (_Component2) {\n  _inherits(HomeScreen, _Component2);\n\n  function HomeScreen(props) {\n    _classCallCheck(this, HomeScreen);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(HomeScreen).call(this, props));\n  }\n\n  _createClass(HomeScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.navigation.setOptions({\n        headerShown: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        }\n      }, React.createElement(ImageBackground, {\n        defaultSource: img_background,\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        }\n      }, React.createElement(Image, {\n        source: img_title,\n        style: styles.titleImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this.props.navigation.navigate(\"Camera\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        }\n      }, React.createElement(Image, {\n        source: img_play,\n        style: styles.playButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        }\n      })), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this.props.navigation.navigate(\"Rules\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        }\n      }, React.createElement(Image, {\n        source: img_rules,\n        style: styles.rulesButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        }\n      })), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this.props.navigation.navigate(\"Scores\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        }\n      }, React.createElement(Image, {\n        source: img_scores,\n        style: styles.scoresButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        }\n      })))));\n    }\n  }]);\n\n  return HomeScreen;\n}(Component);\n\nvar RulesScreen = function (_Component3) {\n  _inherits(RulesScreen, _Component3);\n\n  function RulesScreen(props) {\n    _classCallCheck(this, RulesScreen);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RulesScreen).call(this, props));\n  }\n\n  _createClass(RulesScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.props.navigation.setOptions({\n        title: \"How to Play\",\n        headerTitleStyle: {\n          fontFamily: 'Arial Rounded MT Bold',\n          fontSize: 28\n        },\n        gestureEnabled: false,\n        headerLeft: function headerLeft() {\n          return React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              _this2.props.navigation.navigate(\"Home\");\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 150\n            }\n          }, React.createElement(Image, {\n            source: img_home,\n            style: styles.homeButton,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 157\n            }\n          }));\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ImageBackground, {\n        defaultSource: img_scorebg,\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        }\n      }, React.createElement(View, {\n        style: styles.rulesScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        }\n      }, React.createElement(Text, {\n        style: styles.rulesTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        }\n      }, \"How to Play Depic!\"), React.createElement(Text, {\n        style: styles.rulesText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        }\n      }, \"Depic is an app version of the classic ABC game! \", \"\\n\\n\", \"The goal is to find an object that begins with the same letter shown on the screen and take a picture of it!\", \"\\n\\n\", \"If you capture the correct items, you will get points and move on to the next letter! If not, you will need to try again! You can also use the \\\"Skip\\\" button up to three times per game for any letters you get stuck on.\", \"\\n\\n\", \"Once you make it through all the letters of the alphabet, you win!\")));\n    }\n  }]);\n\n  return RulesScreen;\n}(Component);\n\nvar CameraScreen = function (_Component4) {\n  _inherits(CameraScreen, _Component4);\n\n  function CameraScreen(props) {\n    var _this3;\n\n    _classCallCheck(this, CameraScreen);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(CameraScreen).call(this, props));\n    _this3.state = {\n      hasPermission: null,\n      type: Camera.Constants.Type.back,\n      loading: false,\n      gameData: {\n        currentLetter: 'a',\n        score: 0,\n        numSkips: 3,\n        foundList: []\n      },\n      bgColor: ['#69156f', '#43fc6f', '#3253b8', '#aa1b7c', '#cc3b1d', '#16fbbb', '#e77ad4', '#b3787d', '#7de7d4', '#29c125', '#d7dfd2', '#ba72b0', '#a4210f', '#087b57', '#942844', '#737015', '#93f860', '#33a2fa'],\n      selectedColor: '#FFC0CB',\n      secondSelectedColor: '#008080'\n    };\n    return _this3;\n  }\n\n  _createClass(CameraScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this4 = this;\n\n      var status, gameData;\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              this._getRandomColor();\n\n              status = Camera.requestPermissionsAsync();\n              this.setState({\n                hasPermission: true\n              });\n              _context2.t0 = JSON;\n              _context2.next = 6;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"SAVEGAME\"));\n\n            case 6:\n              _context2.t1 = _context2.sent;\n              gameData = _context2.t0.parse.call(_context2.t0, _context2.t1);\n\n              if (!(gameData != null)) {\n                _context2.next = 12;\n                break;\n              }\n\n              this.setState({\n                gameData: gameData\n              });\n              _context2.next = 12;\n              return _regeneratorRuntime.awrap(AsyncStorage.removeItem(\"SAVEGAME\"));\n\n            case 12:\n              this.props.navigation.setOptions({\n                title: \"Depic\",\n                headerTitleStyle: {\n                  fontFamily: 'MarkerFelt-Thin',\n                  fontSize: 28\n                },\n                gestureEnabled: false,\n                headerLeft: function headerLeft() {\n                  return React.createElement(TouchableOpacity, {\n                    disabled: _this4.state.loading,\n                    onPress: function onPress() {\n                      Alert.alert(\"Quit Game\", \"Choose one option:\", [{\n                        text: \"Keep Playing\"\n                      }, {\n                        text: \"Quit and Save Progress\",\n                        onPress: function onPress() {\n                          var gameData;\n                          return _regeneratorRuntime.async(function onPress$(_context) {\n                            while (1) {\n                              switch (_context.prev = _context.next) {\n                                case 0:\n                                  gameData = JSON.stringify(_this4.state.gameData);\n                                  _context.next = 3;\n                                  return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"SAVEGAME\", gameData));\n\n                                case 3:\n                                  Alert.alert(\"Game saved successfully.\");\n\n                                  _this4.props.navigation.goBack();\n\n                                case 5:\n                                case \"end\":\n                                  return _context.stop();\n                              }\n                            }\n                          });\n                        }\n                      }, {\n                        text: \"End Game Now\",\n                        onPress: function onPress() {\n                          return _this4.props.navigation.navigate(\"ScoreEntry\", {\n                            score: _this4.state.gameData.score,\n                            foundList: _this4.state.gameData.foundList\n                          });\n                        }\n                      }]);\n                    },\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 251\n                    }\n                  }, React.createElement(Image, {\n                    source: img_home,\n                    style: styles.homeButton,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 282\n                    }\n                  }));\n                }\n              });\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"_getRandomColor\",\n    value: function _getRandomColor() {\n      var item = this.state.bgColor[Math.floor(Math.random() * this.state.bgColor.length)];\n      var itemTwo = this.state.bgColor[Math.floor(Math.random() * this.state.bgColor.length)];\n\n      if (item != itemTwo) {\n        this.setState({\n          selectedColor: item,\n          secondSelectedColor: itemTwo\n        });\n      }\n    }\n  }, {\n    key: \"objectDetection\",\n    value: function objectDetection(image64) {\n      var start, response, preds, tolerance, i, end;\n      return _regeneratorRuntime.async(function objectDetection$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              start = new Date().getTime();\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(detector.models.predict(Clarifai.GENERAL_MODEL, {\n                base64: image64\n              }));\n\n            case 3:\n              response = _context3.sent;\n              preds = [];\n              tolerance = 10;\n\n              if (tolerance > response.outputs[0].data.concepts.length) {\n                tolerance = response.outputs[0].data.concepts.length;\n              }\n\n              i = 0;\n\n            case 8:\n              if (!(i < response.outputs[0].data.concepts.length)) {\n                _context3.next = 15;\n                break;\n              }\n\n              if (!(tolerance == 0)) {\n                _context3.next = 11;\n                break;\n              }\n\n              return _context3.abrupt(\"break\", 15);\n\n            case 11:\n              if (!predIgnores.includes(response.outputs[0].data.concepts[i].name)) {\n                preds.push(response.outputs[0].data.concepts[i].name);\n                tolerance = tolerance - 1;\n              }\n\n            case 12:\n              i++;\n              _context3.next = 8;\n              break;\n\n            case 15:\n              this.setState({\n                loading: false\n              });\n              end = new Date().getTime();\n              console.log(\"Execution time: \" + (end - start));\n              return _context3.abrupt(\"return\", preds);\n\n            case 19:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"takePicture\",\n    value: function takePicture() {\n      var photo;\n      return _regeneratorRuntime.async(function takePicture$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!this.camera) {\n                _context4.next = 7;\n                break;\n              }\n\n              _context4.next = 3;\n              return _regeneratorRuntime.awrap(this.camera.takePictureAsync());\n\n            case 3:\n              photo = _context4.sent;\n              return _context4.abrupt(\"return\", photo);\n\n            case 7:\n              Alert.alert(\"Could not access camera! Make sure to give Depic camera permissions in Settings!\");\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      if (this.state.hasPermission) {\n        return React.createElement(View, {\n          style: {\n            flex: 1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347\n          }\n        }, React.createElement(View, {\n          style: (styles.cameraScoreBoard, {\n            backgroundColor: this.state.selectedColor,\n            alignItems: 'center'\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 349\n          }\n        }, React.createElement(View, {\n          style: {\n            backgroundColor: this.state.secondSelectedColor,\n            alignItems: 'center',\n            justifyContent: 'center',\n            padding: 10,\n            borderRadius: 10,\n            margin: 15\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350\n          }\n        }, React.createElement(Text, {\n          style: styles.cameraScoreBoardText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 351\n          }\n        }, \" \", this.state.gameData.currentLetter)), React.createElement(Text, {\n          style: styles.cameraScoreBoardScoreText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 353\n          }\n        }, \"Score: \", this.state.gameData.score), React.createElement(Text, {\n          style: styles.cameraScoreBoardScoreText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354\n          }\n        }, \"Skips Left: \", this.state.gameData.numSkips), React.createElement(ActivityIndicator, {\n          size: \"large\",\n          animating: this.state.loading,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 355\n          }\n        })), React.createElement(Camera, {\n          style: {\n            flex: 1\n          },\n          type: this.state.type,\n          ref: function ref(_ref) {\n            _this5.camera = _ref;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 358\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 1,\n            backgroundColor: 'transparent',\n            flexDirection: 'row'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: {\n            flex: 0.6,\n            alignSelf: 'flex-end',\n            alignItems: 'center'\n          },\n          disabled: this.state.loading,\n          onPress: function _callee() {\n            var image, imageResized, imgBase64, predictions, found, i, dataTemp, currentCharCode, foundPair, nextLetter;\n            return _regeneratorRuntime.async(function _callee$(_context5) {\n              while (1) {\n                switch (_context5.prev = _context5.next) {\n                  case 0:\n                    _this5.setState({\n                      loading: true\n                    });\n\n                    _context5.next = 3;\n                    return _regeneratorRuntime.awrap(_this5.takePicture());\n\n                  case 3:\n                    image = _context5.sent;\n                    _context5.next = 6;\n                    return _regeneratorRuntime.awrap(ImageManipulator.manipulateAsync(image.uri, [{\n                      resize: {\n                        width: 300,\n                        height: 300\n                      }\n                    }], {\n                      base64: true\n                    }));\n\n                  case 6:\n                    imageResized = _context5.sent;\n                    imgBase64 = imageResized.base64;\n                    _context5.next = 10;\n                    return _regeneratorRuntime.awrap(_this5.objectDetection(imgBase64));\n\n                  case 10:\n                    predictions = _context5.sent;\n                    found = false;\n                    i = 0;\n\n                  case 13:\n                    if (!(i < predictions.length)) {\n                      _context5.next = 28;\n                      break;\n                    }\n\n                    if (!(predictions[i][0] == _this5.state.gameData.currentLetter)) {\n                      _context5.next = 25;\n                      break;\n                    }\n\n                    found = true;\n                    Alert.alert(\"You got it! Found word: \" + predictions[i]);\n                    dataTemp = _this5.state.gameData;\n                    dataTemp.score = dataTemp.score + 100;\n\n                    _this5.setState({\n                      gameData: dataTemp\n                    });\n\n                    currentCharCode = dataTemp.currentLetter.charCodeAt(0);\n                    foundPair = {\n                      letter: dataTemp.currentLetter,\n                      word: predictions[i]\n                    };\n                    dataTemp.foundList.push(foundPair);\n\n                    if (currentCharCode < 122) {\n                      nextLetter = String.fromCharCode(currentCharCode + 1);\n                      dataTemp.currentLetter = nextLetter;\n\n                      _this5.setState({\n                        gameData: dataTemp\n                      });\n                    } else {\n                      _this5.setState({\n                        gameData: dataTemp\n                      }, _this5.props.navigation.navigate(\"ScoreEntry\", {\n                        score: dataTemp.score,\n                        foundList: dataTemp.foundList\n                      }));\n                    }\n\n                    return _context5.abrupt(\"break\", 28);\n\n                  case 25:\n                    ++i;\n                    _context5.next = 13;\n                    break;\n\n                  case 28:\n                    if (!found) {\n                      Alert.alert(\"Sorry, we didn't find anything beginning with the letter \" + _this5.state.gameData.currentLetter + \". Try again!\");\n                    }\n\n                    _context5.next = 31;\n                    return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"SAVEGAME\", JSON.stringify(_this5.state.gameData)));\n\n                  case 31:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 370\n          }\n        }, React.createElement(Image, {\n          source: img_take_pic,\n          style: styles.takePicButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 439\n          }\n        })), React.createElement(TouchableOpacity, {\n          disabled: this.state.loading,\n          style: {\n            flex: 0.3,\n            alignSelf: 'flex-end',\n            alignItems: 'center'\n          },\n          onPress: function _callee2() {\n            var currentCharCode, nextLetter, dataTemp;\n            return _regeneratorRuntime.async(function _callee2$(_context6) {\n              while (1) {\n                switch (_context6.prev = _context6.next) {\n                  case 0:\n                    if (_this5.state.gameData.numSkips == 0) {\n                      Alert.alert(\"You are out of skips!\");\n                    } else {\n                      currentCharCode = _this5.state.gameData.currentLetter.charCodeAt(0);\n\n                      if (currentCharCode < 122) {\n                        nextLetter = String.fromCharCode(currentCharCode + 1);\n                        dataTemp = _this5.state.gameData;\n                        dataTemp.currentLetter = nextLetter;\n                        dataTemp.numSkips = dataTemp.numSkips - 1;\n\n                        _this5.setState({\n                          gameData: dataTemp\n                        });\n                      } else {\n                        _this5.props.navigation.navigate(\"ScoreEntry\", {\n                          score: _this5.state.gameData.score,\n                          foundList: _this5.state.gameData.foundList\n                        });\n                      }\n                    }\n\n                    _context6.next = 3;\n                    return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"SAVEGAME\", JSON.stringify(_this5.state.gameData)));\n\n                  case 3:\n                  case \"end\":\n                    return _context6.stop();\n                }\n              }\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 441\n          }\n        }, React.createElement(Image, {\n          source: img_skip,\n          style: styles.skipButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 471\n          }\n        })))));\n      } else {\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 480\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 481\n          }\n        }, \"CAMERA PERMISSION DENIED\"));\n      }\n    }\n  }]);\n\n  return CameraScreen;\n}(Component);\n\nvar ScoreEntryScreen = function (_Component5) {\n  _inherits(ScoreEntryScreen, _Component5);\n\n  function ScoreEntryScreen(props) {\n    _classCallCheck(this, ScoreEntryScreen);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ScoreEntryScreen).call(this, props));\n  }\n\n  _createClass(ScoreEntryScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this6 = this;\n\n      this.props.navigation.setOptions({\n        title: \"Congratulations!\",\n        headerTitleStyle: {\n          fontFamily: 'MarkerFelt-Thin',\n          fontSize: 28\n        },\n        gestureEnabled: false,\n        headerLeft: function headerLeft() {\n          return React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              Alert.alert(\"Are you sure you want to exit?\", \"If you quit now, your score will not be saved!\", [{\n                text: \"Yes\",\n                onPress: function onPress() {\n                  return _regeneratorRuntime.async(function onPress$(_context7) {\n                    while (1) {\n                      switch (_context7.prev = _context7.next) {\n                        case 0:\n                          _context7.next = 2;\n                          return _regeneratorRuntime.awrap(AsyncStorage.removeItem(\"SAVEGAME\"));\n\n                        case 2:\n                          _this6.props.navigation.navigate(\"Home\");\n\n                        case 3:\n                        case \"end\":\n                          return _context7.stop();\n                      }\n                    }\n                  });\n                }\n              }, {\n                text: \"No\",\n                onPress: function onPress() {\n                  return console.log(\"no pressed\");\n                }\n              }]);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 505\n            }\n          }, React.createElement(Image, {\n            source: img_home,\n            style: styles.homeButton,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 529\n            }\n          }));\n        }\n      });\n    }\n  }, {\n    key: \"saveNewScore\",\n    value: function saveNewScore(name, score) {\n      var entryLimit, scores, newScore, i, _i;\n\n      return _regeneratorRuntime.async(function saveNewScore$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              entryLimit = 10;\n              _context8.t0 = JSON;\n              _context8.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"SCORES\"));\n\n            case 4:\n              _context8.t1 = _context8.sent;\n              scores = _context8.t0.parse.call(_context8.t0, _context8.t1);\n              newScore = {\n                name: name,\n                score: score\n              };\n\n              if (!(scores == null)) {\n                _context8.next = 12;\n                break;\n              }\n\n              _context8.next = 10;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"SCORES\", JSON.stringify([newScore])));\n\n            case 10:\n              _context8.next = 35;\n              break;\n\n            case 12:\n              if (!(scores.length < entryLimit)) {\n                _context8.next = 24;\n                break;\n              }\n\n              i = 0;\n\n            case 14:\n              if (!(i < scores.length)) {\n                _context8.next = 21;\n                break;\n              }\n\n              if (!(newScore.score > scores[i].score)) {\n                _context8.next = 18;\n                break;\n              }\n\n              scores.splice(i, 0, newScore);\n              return _context8.abrupt(\"break\", 21);\n\n            case 18:\n              ++i;\n              _context8.next = 14;\n              break;\n\n            case 21:\n              scores.push(newScore);\n              _context8.next = 33;\n              break;\n\n            case 24:\n              _i = 0;\n\n            case 25:\n              if (!(_i < scores.length)) {\n                _context8.next = 32;\n                break;\n              }\n\n              if (!(newScore.score > scores[_i].score)) {\n                _context8.next = 29;\n                break;\n              }\n\n              scores.splice(_i, 0, newScore);\n              return _context8.abrupt(\"break\", 32);\n\n            case 29:\n              ++_i;\n              _context8.next = 25;\n              break;\n\n            case 32:\n              if (scores.length > entryLimit) {\n                scores.pop();\n              }\n\n            case 33:\n              _context8.next = 35;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"SCORES\", JSON.stringify(scores)));\n\n            case 35:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      return React.createElement(View, {\n        style: styles.entryScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578\n        }\n      }, React.createElement(ImageBackground, {\n        defaultSource: img_scorebg,\n        style: {\n          width: \"100%\",\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579\n        }\n      }, React.createElement(Text, {\n        style: styles.entryText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580\n        }\n      }, \"Your Score: \", this.props.route.params.score), React.createElement(TextInput, {\n        style: styles.entryInput,\n        maxLength: 25,\n        placeholder: \"ENTER YOUR NAME HERE\",\n        onSubmitEditing: function _callee3(event) {\n          return _regeneratorRuntime.async(function _callee3$(_context9) {\n            while (1) {\n              switch (_context9.prev = _context9.next) {\n                case 0:\n                  _context9.next = 2;\n                  return _regeneratorRuntime.awrap(_this7.saveNewScore(event.nativeEvent.text, _this7.props.route.params.score));\n\n                case 2:\n                  _this7.props.navigation.navigate(\"Scores\");\n\n                case 3:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581\n        }\n      }), React.createElement(Text, {\n        style: styles.entryText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592\n        }\n      }, \"Here are the items you found this game:\"), React.createElement(FlatList, {\n        data: this.props.route.params.foundList,\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item,\n              index = _ref2.index;\n          return React.createElement(Text, {\n            style: styles.scoreRow,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 595\n            }\n          }, item.letter, '\\t\\t\\t\\t', item.word);\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item.letter;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593\n        }\n      })));\n    }\n  }]);\n\n  return ScoreEntryScreen;\n}(Component);\n\nvar ScoreScreen = function (_Component6) {\n  _inherits(ScoreScreen, _Component6);\n\n  function ScoreScreen(props) {\n    var _this8;\n\n    _classCallCheck(this, ScoreScreen);\n\n    _this8 = _possibleConstructorReturn(this, _getPrototypeOf(ScoreScreen).call(this, props));\n    _this8.state = {\n      scores: null,\n      bgColor: ['#009FBA', '#CAED60', '#EB5B24', '#FDEC8C', '#F4885E', '#79AAAF', '#FCCC00', '#EB5B24', '#1D9911'],\n      selectedColor: '#FFC0CB'\n    };\n    return _this8;\n  }\n\n  _createClass(ScoreScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this9 = this;\n\n      var highScores;\n      return _regeneratorRuntime.async(function componentDidMount$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              this.props.navigation.setOptions({\n                gestureEnabled: false,\n                headerLeft: function headerLeft() {\n                  return React.createElement(TouchableOpacity, {\n                    onPress: function onPress() {\n                      _this9.props.navigation.navigate(\"Home\");\n                    },\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 637\n                    }\n                  }, React.createElement(Image, {\n                    source: img_home,\n                    style: styles.homeButton,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 642\n                    }\n                  }));\n                }\n              });\n\n              this._getRandomColor();\n\n              _context10.prev = 2;\n              _context10.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('SCORES'));\n\n            case 5:\n              highScores = _context10.sent;\n\n              if (highScores != null) {\n                this.setState({\n                  scores: JSON.parse(highScores)\n                });\n                console.log(\"DEBUG: Retrieval successful.\");\n              } else {\n                console.log(\"DEBUG: Retrieval successful but null.\");\n              }\n\n              _context10.next = 12;\n              break;\n\n            case 9:\n              _context10.prev = 9;\n              _context10.t0 = _context10[\"catch\"](2);\n              console.error(\"Error retrieving scores: \" + _context10.t0);\n\n            case 12:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, null, this, [[2, 9]]);\n    }\n  }, {\n    key: \"_getRandomColor\",\n    value: function _getRandomColor() {\n      var item = this.state.bgColor[Math.floor(Math.random() * this.state.bgColor.length)];\n      var itemTwo = this.state.bgColor[Math.floor(Math.random() * this.state.bgColor.length)];\n\n      if (item != itemTwo) {\n        this.setState({\n          selectedColor: item\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.scores != null) {\n        return React.createElement(View, {\n          style: styles.entryScreen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 675\n          }\n        }, React.createElement(ImageBackground, {\n          defaultSource: img_highestScorebg,\n          style: {\n            width: \"100%\",\n            height: \"100%\",\n            alignItems: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 676\n          }\n        }, React.createElement(Text, {\n          style: styles.titleText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 677\n          }\n        }, \"High Scores\"), React.createElement(FlatList, {\n          data: this.state.scores,\n          renderItem: function renderItem(_ref3) {\n            var item = _ref3.item,\n                index = _ref3.index;\n            return React.createElement(Text, {\n              style: styles.scoreRow,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 680\n              }\n            }, index + 1, \". \", item.name, '\\t\\t\\t\\t', item.score);\n          },\n          keyExtractor: function keyExtractor(item, index) {\n            return index.toString();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 678\n          }\n        })));\n      } else {\n        return React.createElement(View, {\n          style: styles.entryScreen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 689\n          }\n        }, React.createElement(ImageBackground, {\n          defaultSource: img_highestScorebg,\n          style: {\n            width: \"100%\",\n            height: \"100%\",\n            alignItems: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 690\n          }\n        }, React.createElement(Text, {\n          style: styles.titleText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 691\n          }\n        }, \"High Scores\"), React.createElement(Text, {\n          style: styles.noScores,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 692\n          }\n        }, \"There are no scores yet. Play a game and get the first high score!\")));\n      }\n    }\n  }]);\n\n  return ScoreScreen;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  titleImage: {\n    width: 300,\n    height: 200,\n    resizeMode: \"contain\",\n    marginTop: -100,\n    marginBottom: 100\n  },\n  titleText: {\n    fontSize: 42,\n    fontWeight: 'bold',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 20,\n    fontFamily: 'Arial Rounded MT Bold'\n  },\n  playButton: {\n    width: 100,\n    height: 100,\n    resizeMode: \"contain\",\n    marginBottom: 10\n  },\n  rulesButton: {\n    width: 100,\n    height: 100,\n    resizeMode: \"contain\"\n  },\n  scoresButton: {\n    width: 100,\n    height: 100,\n    resizeMode: \"contain\",\n    position: \"relative\",\n    bottom: -100,\n    left: 100\n  },\n  buttons: {\n    backgroundColor: 'orange',\n    borderRadius: 10,\n    margin: 4,\n    padding: 5,\n    borderColor: '#d19119',\n    borderWidth: 2\n  },\n  buttonText: {\n    fontSize: 38,\n    fontFamily: 'Arial Rounded MT Bold'\n  },\n  rulesScreen: {\n    alignItems: 'center'\n  },\n  rulesTitle: {\n    fontSize: 38,\n    fontWeight: 'bold',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 10,\n    fontFamily: 'Arial Rounded MT Bold',\n    textDecorationLine: 'underline'\n  },\n  rulesText: {\n    fontSize: 24,\n    color: 'black',\n    textShadowColor: 'white',\n    textShadowOffset: {\n      width: -1,\n      height: 1\n    },\n    textShadowRadius: 2,\n    fontFamily: 'Arial Rounded MT Bold',\n    marginHorizontal: 20\n  },\n  cameraScoreBoard: {\n    alignItems: 'center'\n  },\n  cameraScoreBoardText: {\n    fontSize: 70,\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontFamily: 'Arial Rounded MT Bold',\n    paddingRight: 10,\n    textTransform: 'capitalize'\n  },\n  cameraScoreBoardScoreText: {\n    fontSize: 35,\n    fontFamily: 'Arial Rounded MT Bold'\n  },\n  takePicButton: {\n    width: 80,\n    height: 80,\n    resizeMode: \"contain\",\n    marginLeft: \"-22%\",\n    marginBottom: 30\n  },\n  skipButton: {\n    width: 80,\n    height: 80,\n    resizeMode: \"contain\",\n    marginBottom: 30,\n    marginLeft: \"22%\"\n  },\n  homeButton: {\n    width: 40,\n    height: 40,\n    resizeMode: \"contain\",\n    marginLeft: 15\n  },\n  entryScreen: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  entryText: {\n    fontFamily: 'Arial Rounded MT Bold',\n    fontSize: 28,\n    padding: 20,\n    textShadowColor: 'white',\n    textShadowOffset: {\n      width: -1,\n      height: 1\n    },\n    textShadowRadius: 2\n  },\n  entryInput: {\n    fontFamily: 'Arial Rounded MT Bold',\n    fontSize: 25,\n    borderColor: 'gray',\n    borderWidth: 1,\n    width: \"95%\",\n    marginLeft: \"2.5%\",\n    padding: 5,\n    backgroundColor: 'white'\n  },\n  scoreRow: {\n    padding: 5,\n    backgroundColor: 'orange',\n    borderColor: 'black',\n    borderWidth: 1,\n    fontFamily: 'Arial Rounded MT Bold',\n    fontSize: 28\n  },\n  noScores: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 10,\n    fontFamily: 'Arial Rounded MT Bold'\n  }\n});","map":{"version":3,"sources":["/mnt/Linux Storage/projects/depic/App.js"],"names":["React","Component","NavigationContainer","useNavigation","createStackNavigator","Camera","ImagePicker","MediaLibrary","ImageManipulator","Asset","config","require","img_background","img_title","img_play","img_rules","img_scores","img_skip","img_take_pic","img_home","img_scorebg","img_highestScorebg","Clarifai","CLARIFAI_KEY","clarifai","key","detector","App","apiKey","predIgnores","Stack","props","headerStyle","backgroundColor","HomeScreen","CameraScreen","RulesScreen","ScoreEntryScreen","ScoreScreen","navigation","setOptions","headerShown","styles","container","width","height","titleImage","navigate","playButton","rulesButton","scoresButton","title","headerTitleStyle","fontFamily","fontSize","gestureEnabled","headerLeft","homeButton","rulesScreen","rulesTitle","rulesText","state","hasPermission","type","Constants","Type","back","loading","gameData","currentLetter","score","numSkips","foundList","bgColor","selectedColor","secondSelectedColor","_getRandomColor","status","requestPermissionsAsync","setState","JSON","AsyncStorage","getItem","parse","removeItem","Alert","alert","text","onPress","stringify","setItem","goBack","item","Math","floor","random","length","itemTwo","image64","start","Date","getTime","models","predict","GENERAL_MODEL","base64","response","preds","tolerance","outputs","data","concepts","i","includes","name","push","end","console","log","camera","takePictureAsync","photo","flex","cameraScoreBoard","alignItems","justifyContent","padding","borderRadius","margin","cameraScoreBoardText","cameraScoreBoardScoreText","ref","flexDirection","alignSelf","takePicture","image","manipulateAsync","uri","resize","imageResized","imgBase64","objectDetection","predictions","found","dataTemp","currentCharCode","charCodeAt","foundPair","letter","word","nextLetter","String","fromCharCode","takePicButton","skipButton","entryLimit","scores","newScore","splice","pop","entryScreen","entryText","route","params","entryInput","event","saveNewScore","nativeEvent","index","scoreRow","highScores","error","titleText","toString","noScores","StyleSheet","create","resizeMode","marginTop","marginBottom","fontWeight","position","bottom","left","buttons","borderColor","borderWidth","buttonText","textDecorationLine","color","textShadowColor","textShadowOffset","textShadowRadius","marginHorizontal","paddingRight","textTransform","marginLeft"],"mappings":"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","sourcesContent":["/**\r\n * Matthew O'Connell, Jade Hyuang, Kylah Harris, Dymon Moore\r\n * CSC 4810 Mobile App Development\r\n * Team Project - Depic (Augmented Reality Game)\r\n**/\r\nimport React, { Component } from 'react';\r\nimport {\r\n\tStyleSheet,\r\n\tText,\r\n\tView,\r\n\tButton,\r\n\tImage,\r\n\tTouchableOpacity,\r\n\tScrollView,\r\n\tActivityIndicator,\r\n\tAlert,\r\n\tAsyncStorage,\r\n\tFlatList,\r\n  TextInput,\r\n  ImageBackground,\r\n  Modal,\r\n } from 'react-native';\r\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { Camera } from 'expo-camera';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport * as MediaLibrary from 'expo-media-library';\r\nimport * as ImageManipulator from \"expo-image-manipulator\";\r\nimport { Asset } from \"expo-asset\";\r\n\r\n// Configuration settings - dev only!\r\nconst config = require('./config');\r\n\r\n// Load art assets\r\nconst img_background = require('./assets/art/home_screen_bg.jpg');\r\nconst img_title = require('./assets/art/depic_title.png');\r\nconst img_play = require('./assets/art/play_icon.png');\r\nconst img_rules = require('./assets/art/instructions_icon.png');\r\nconst img_scores = require('./assets/art/scoreboard_icon.png');\r\nconst img_skip = require('./assets/art/skip_icon.png');\r\nconst img_take_pic = require('./assets/art/take_pic_icon.png');\r\nconst img_home = require('./assets/art/home_icon.png');\r\nconst img_scorebg = require('./assets/art/scoreboard_bg.png')\r\nconst img_highestScorebg = require('./assets/art/highestscoreboard_bg.png')\r\n\r\n// Initialize Clarifai API connection - place your key in a config.js file\r\nconst Clarifai = require('clarifai');\r\nconst CLARIFAI_KEY = config.clarifai.key;\r\nconst detector = new Clarifai.App({\r\n\tapiKey: CLARIFAI_KEY,\r\n});\r\n\r\n// List of predictions we ignore because they are irrelevant or produce\r\n// unexpected results\r\nconst predIgnores = [\r\n  \"no person\",\r\n  \"abstract\",\r\n  \"dof\",\r\n];\r\n\r\nconst Stack = createStackNavigator();\r\n// App class is essentially a container class for our Stack navigator\r\nexport default class App extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<NavigationContainer>\r\n\t\t\t\t<Stack.Navigator\r\n          screenOptions={{\r\n            headerStyle: {\r\n              backgroundColor: \"#EEF4BD\",\r\n            },\r\n          }}\r\n        >\r\n\t\t\t\t\t<Stack.Screen name=\"Home\" component={HomeScreen} />\r\n\t\t\t\t\t<Stack.Screen name=\"Camera\" component={CameraScreen} />\r\n          <Stack.Screen name=\"Rules\" component={RulesScreen} />\r\n          <Stack.Screen name=\"ScoreEntry\" component={ScoreEntryScreen} />\r\n\t\t\t\t\t<Stack.Screen name=\"Scores\" component={ScoreScreen} />\r\n\t\t\t\t</Stack.Navigator>\r\n\t\t\t</NavigationContainer>\r\n\t\t);\r\n\t}\r\n\r\n}\r\n\r\n// Class handling logic & rendering of initial screen\r\nclass HomeScreen extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t}\r\n\r\n  componentDidMount(){\r\n    this.props.navigation.setOptions({\r\n      headerShown: false,\r\n    });\r\n  }\r\n\r\n\r\n\trender(){\r\n    // <Text style={styles.titleText}>Welcome to Depic!</Text>\r\n    // <Text style={styles.buttonText}>Play Game</Text>\r\n\r\n\r\n\t\treturn(\r\n\t\t    <View style={styles.container} >\r\n\t\t    <ImageBackground  defaultSource={img_background}  style={{width:'100%', height:'100%'}}>\r\n\t\t    <View style={styles.container}>\r\n          <Image source={img_title} style={styles.titleImage}/>\r\n\t\t\t\t\t<TouchableOpacity\r\n\t\t\t\t\t\tonPress={() => {this.props.navigation.navigate(\"Camera\");} }\r\n\t\t\t\t\t\t>\r\n            <Image source={img_play} style={styles.playButton} />\r\n\t\t\t\t\t</TouchableOpacity>\r\n          <TouchableOpacity\r\n            onPress={() => {this.props.navigation.navigate(\"Rules\");} }\r\n            >\r\n            <Image source={img_rules} style={styles.rulesButton} />\r\n          </TouchableOpacity>\r\n\t\t\t\t\t<TouchableOpacity\r\n\t\t\t\t\t\tonPress={ () => {this.props.navigation.navigate(\"Scores\")} }\r\n\t\t\t\t\t\t>\r\n            <Image source={img_scores} style={styles.scoresButton} />\r\n\t\t\t\t\t</TouchableOpacity>\r\n\t\t    </View>\r\n\t\t    </ImageBackground>\r\n\t\t    </View>\r\n\t\t);\r\n\t}\r\n\r\n}\r\n\r\nclass RulesScreen extends Component{\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.navigation.setOptions({\r\n      title: \"How to Play\",\r\n      headerTitleStyle: {\r\n        fontFamily: 'Arial Rounded MT Bold',\r\n        fontSize: 28,\r\n      },\r\n      gestureEnabled: false,\r\n      headerLeft: () => (\r\n        <TouchableOpacity\r\n          onPress={\r\n            () => {\r\n              this.props.navigation.navigate(\"Home\");\r\n            }\r\n          }\r\n        >\r\n          <Image source={img_home} style={styles.homeButton} />\r\n        </TouchableOpacity>\r\n      ),\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <ImageBackground  defaultSource={img_scorebg}  style={{width:'100%', height:'100%'}}>\r\n      <View style={styles.rulesScreen}>\r\n        <Text style={styles.rulesTitle}>How to Play Depic!</Text>\r\n        <Text style={styles.rulesText}>\r\n          Depic is an app version of the classic ABC game! {\"\\n\\n\"}\r\n          The goal is to find an object that begins with the same letter shown on the screen and take a picture of it!{\"\\n\\n\"}\r\n          If you capture the correct items, you will get points and move on to the next letter!\r\n          If not, you will need to try again! You can also use the \"Skip\" button up to three times per game for any letters you get stuck on.{\"\\n\\n\"}\r\n          Once you make it through all the letters of the alphabet, you win!\r\n        </Text>\r\n      </View>\r\n      </ImageBackground>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nclass CameraScreen extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasPermission: null,\r\n\t\t\t// Back-view camera\r\n\t\t\ttype: Camera.Constants.Type.back,\r\n\t\t\tloading: false,\r\n      gameData: {\r\n        // must be lowercase\r\n        currentLetter: 'a',\r\n        score: 0,\r\n        numSkips: 3,\r\n        // array of letter-word pairs\r\n        // used to show all of the objects that players correctly identified\r\n        // Structure of pairings:\r\n        // {\r\n        //  letter: \"x\",\r\n        //  word: \"word\",\r\n        // }\r\n        foundList: [],\r\n      },\r\n      bgColor: [\r\n        '#69156f',\r\n        '#43fc6f',\r\n        '#3253b8',\r\n        '#aa1b7c',\r\n        '#cc3b1d',\r\n        '#16fbbb',\r\n        '#e77ad4',\r\n        '#b3787d',\r\n        '#7de7d4',\r\n        '#29c125',\r\n        '#d7dfd2',\r\n        '#ba72b0',\r\n        '#a4210f',\r\n        '#087b57',\r\n        '#942844',\r\n        '#737015',\r\n        '#93f860',\r\n        '#33a2fa',\r\n      ],\r\n      selectedColor:'#FFC0CB',\r\n      secondSelectedColor:'#008080',\r\n\t\t};\r\n\t}\r\n\r\n\tasync componentDidMount(){\r\n\t\tthis._getRandomColor()\r\n\t\t// TODO - double check if this is the correct implementation\r\n\t\tconst status = Camera.requestPermissionsAsync();\r\n\t\tthis.setState({\r\n\t\t\t// figure out how to actually set this\r\n\t\t\thasPermission: true,\r\n\t\t});\r\n    const gameData = JSON.parse(await AsyncStorage.getItem(\"SAVEGAME\"));\r\n    if(gameData != null){\r\n      this.setState({gameData: gameData});\r\n      await AsyncStorage.removeItem(\"SAVEGAME\");\r\n    }\r\n    // Set navigation optios\r\n    this.props.navigation.setOptions({\r\n      title: \"Depic\",\r\n      headerTitleStyle: {\r\n        fontFamily: 'MarkerFelt-Thin',\r\n        fontSize: 28,\r\n      },\r\n      gestureEnabled: false,\r\n      headerLeft: () => (\r\n        <TouchableOpacity\r\n        disabled={this.state.loading}\r\n          onPress={\r\n            () => {\r\n              Alert.alert(\r\n                \"Quit Game\",\r\n                \"Choose one option:\",\r\n                [\r\n                  {\r\n                    text: \"Keep Playing\",\r\n                    // Do nothing\r\n                  },\r\n                  {\r\n                    text: \"Quit and Save Progress\",\r\n                    // TODO - save data to AsyncStorage & implement retrieval functionality\r\n                    onPress: async () => {\r\n                      const gameData = JSON.stringify(this.state.gameData);\r\n                      await AsyncStorage.setItem(\"SAVEGAME\", gameData);\r\n                      Alert.alert(\"Game saved successfully.\");\r\n                      this.props.navigation.goBack();\r\n                    },\r\n                  },\r\n                  {\r\n                    text: \"End Game Now\",\r\n                    onPress: () => this.props.navigation.navigate(\"ScoreEntry\", {score: this.state.gameData.score, foundList: this.state.gameData.foundList}),\r\n                  },\r\n                ],\r\n              );\r\n            }\r\n          }\r\n        >\r\n          <Image source={img_home} style={styles.homeButton} />\r\n        </TouchableOpacity>\r\n\r\n    ),\r\n  });\r\n\r\n\t}\r\n\r\n\r\n  _getRandomColor(){\r\n    var item = this.state.bgColor[Math.floor(Math.random()*this.state.bgColor.length)];\r\n    var itemTwo = this.state.bgColor[Math.floor(Math.random()*this.state.bgColor.length)];\r\n    if(item != itemTwo){\r\n      this.setState({\r\n        selectedColor: item,\r\n        secondSelectedColor:itemTwo,\r\n      });\r\n    }\r\n  }\r\n\r\n\tasync objectDetection(image64){\r\n\t\t// Timing the execution - dev only\r\n\t\tvar start = new Date().getTime();\r\n\t\tvar response = await detector.models.predict(Clarifai.GENERAL_MODEL,  {base64: image64});\r\n\t\tlet preds = [];\r\n    // degree of tolerance for predictions\r\n    // i.e. API call returns 20 results; store only the top ${tolerance} results\r\n    var tolerance = 10;\r\n    // tolerance must always be <= # of responses (by default this is 20)\r\n    // this is a catch in case the API changes and returns a different #\r\n    if(tolerance > response.outputs[0].data.concepts.length){\r\n      tolerance = response.outputs[0].data.concepts.length;\r\n    }\r\n\t\tfor(let i = 0; i < response.outputs[0].data.concepts.length; i++){\r\n      // if we've already used up our desired level of tolerance, don't use any\r\n      // more predictions\r\n      if(tolerance == 0){\r\n        break;\r\n      }\r\n\t\t\t// by default the response is sorted from greatest to least confidence\r\n      // only add the prediction if it is not marked as ignored/erroneous\r\n      if(!predIgnores.includes(response.outputs[0].data.concepts[i].name)){\r\n        preds.push(response.outputs[0].data.concepts[i].name);\r\n        tolerance = tolerance - 1;\r\n      }\r\n\t\t}\r\n\t\tthis.setState({loading: false});\r\n\t\tvar end = new Date().getTime();\r\n\t\tconsole.log(`Execution time: ${end-start}`);\r\n\t\treturn preds;\r\n\t}\r\n\r\n\tasync takePicture(){\r\n\t\tif(this.camera){\r\n      const photo = await this.camera.takePictureAsync();\r\n      return photo;\r\n\t\t} else {\r\n      Alert.alert(\"Could not access camera! Make sure to give Depic camera permissions in Settings!\");\r\n    }\r\n\t}\r\n\r\n\trender(){\r\n\t\tif(this.state.hasPermission){\r\n\t\t\treturn(\r\n\r\n\t\t\t\t    <View style={{ flex: 1 }}>\r\n\r\n            <View style={styles.cameraScoreBoard, { backgroundColor: this.state.selectedColor,  alignItems: 'center'}} >\r\n            <View style={{backgroundColor: this.state.secondSelectedColor,  alignItems: 'center', justifyContent: 'center', padding:10, borderRadius:10, margin:15}}>\r\n              <Text style={styles.cameraScoreBoardText}> {this.state.gameData.currentLetter}</Text>\r\n              </View>\r\n              <Text style={styles.cameraScoreBoardScoreText}>Score: {this.state.gameData.score}</Text>\r\n              <Text style={styles.cameraScoreBoardScoreText}>Skips Left: {this.state.gameData.numSkips}</Text>\r\n              <ActivityIndicator size=\"large\" animating={this.state.loading} />\r\n            </View>\r\n\r\n\t\t\t\t      <Camera style={{ flex: 1 }} type={this.state.type}\r\n\t\t\t\t\t\t\t\tref={ref =>{\r\n\t\t\t\t\t\t\t\t\t\tthis.camera = ref;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t        <View\r\n\t\t\t\t          style={{\r\n\t\t\t\t            flex: 1,\r\n\t\t\t\t            backgroundColor: 'transparent',\r\n\t\t\t\t            flexDirection: 'row',\r\n\t\t\t\t          }}>\r\n\t\t\t\t\t\t\t\t\t<TouchableOpacity\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tflex: 0.6,\r\n\t\t\t\t\t\t\t\t\t\t\talignSelf: 'flex-end',\r\n\t\t\t\t\t\t\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n                    disabled={this.state.loading}\r\n\t\t\t\t\t\t\t\t\t\tonPress={async () => {\r\n                      this.setState({loading: true});\r\n                        const image = await this.takePicture();\r\n                        // Need to use ImageManipulator to resize image for two reasons:\r\n                        // 1. Clarifai needs 300x300 image for opimal speed & accuracy balance\r\n                        // 2. Expo Camera API has unresolved bug where specifying image size\r\n                        // does not actually change size of the captured image\r\n                        const imageResized = await ImageManipulator.manipulateAsync(\r\n                          image.uri,\r\n                          [\r\n                            {\r\n                              resize: {\r\n                                width: 300,\r\n                                height: 300,\r\n                              }\r\n                            },\r\n                          ],\r\n                          {\r\n                            base64: true\r\n                          }\r\n                        );\r\n                        const imgBase64 = imageResized.base64;\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst predictions = await this.objectDetection(imgBase64);\r\n\t\t\t\t\t\t\t\t\t\t\t\tlet found = false;\r\n\t\t\t\t\t\t\t\t\t\t\t\tfor(let i = 0; i < predictions.length; ++i){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(predictions[i][0] == this.state.gameData.currentLetter){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfound = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tAlert.alert(`You got it! Found word: ${predictions[i]}`);\r\n                            var dataTemp = this.state.gameData;\r\n                            dataTemp.score = dataTemp.score + 100;\r\n                            this.setState({gameData: dataTemp});\r\n                            let currentCharCode = dataTemp.currentLetter.charCodeAt(0);\r\n                            // Create letter-word pairing for identified object\r\n                            let foundPair = {\r\n                              letter: dataTemp.currentLetter,\r\n                              word: predictions[i],\r\n                            };\r\n                            dataTemp.foundList.push(foundPair);\r\n                            if (currentCharCode < 122){\r\n                              // we have not yet hit 'z' (charCode 122); continue the game\r\n                              var nextLetter = String.fromCharCode(currentCharCode + 1);\r\n                              dataTemp.currentLetter = nextLetter;\r\n                              this.setState({\r\n                                gameData: dataTemp,\r\n                              });\r\n                            } else {\r\n                              this.setState(\r\n                                {\r\n                                  gameData: dataTemp,\r\n                                },\r\n                                this.props.navigation.navigate(\"ScoreEntry\", {score: dataTemp.score, foundList: dataTemp.foundList})\r\n                              );\r\n                            }\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tif(!found){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAlert.alert(`Sorry, we didn't find anything beginning with the letter ${this.state.gameData.currentLetter}. Try again!`);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n                        // Save game state after each relevant update\r\n                        await AsyncStorage.setItem(\"SAVEGAME\", JSON.stringify(this.state.gameData))\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n                    <Image source={img_take_pic} style={styles.takePicButton} />\r\n\t\t\t\t\t\t\t\t\t</TouchableOpacity>\r\n                  <TouchableOpacity\r\n                  disabled={this.state.loading}\r\n\t\t\t\t            style={{\r\n\t\t\t\t              flex: 0.3,\r\n\t\t\t\t              alignSelf: 'flex-end',\r\n\t\t\t\t              alignItems: 'center',\r\n\t\t\t\t            }}\r\n\t\t\t\t            onPress={async () => {\r\n                        if(this.state.gameData.numSkips == 0){\r\n                          Alert.alert(\"You are out of skips!\");\r\n                        } else {\r\n                          let currentCharCode = this.state.gameData.currentLetter.charCodeAt(0);\r\n                          if (currentCharCode < 122){\r\n                            // we have not yet hit 'z' (charCode 122); continue the game\r\n                            var nextLetter = String.fromCharCode(currentCharCode + 1);\r\n                            var dataTemp = this.state.gameData;\r\n                            dataTemp.currentLetter = nextLetter;\r\n                            dataTemp.numSkips = dataTemp.numSkips - 1;\r\n                            this.setState({\r\n                              gameData: dataTemp,\r\n                            });\r\n                          } else {\r\n                            // we've completed the alphabet; exit game\r\n                            // TODO:\r\n                            this.props.navigation.navigate(\"ScoreEntry\", {score: this.state.gameData.score, foundList: this.state.gameData.foundList});\r\n                          }\r\n                        }\r\n                        // Save game state after each relevant update\r\n                        await AsyncStorage.setItem(\"SAVEGAME\", JSON.stringify(this.state.gameData))\r\n\t\t\t\t            }}>\r\n                    <Image source={img_skip} style={styles.skipButton} />\r\n\t\t\t\t          </TouchableOpacity>\r\n\t\t\t\t        </View>\r\n\t\t\t\t      </Camera>\r\n\t\t\t\t    </View>\r\n\t\t\t);\r\n\t\t}\r\n\t\telse{\r\n\t\t\treturn(\r\n\t\t\t\t<View>\r\n\t\t\t\t\t<Text>CAMERA PERMISSION DENIED</Text>\r\n\t\t\t\t</View>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass ScoreEntryScreen extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.navigation.setOptions({\r\n      title: \"Congratulations!\",\r\n      headerTitleStyle: {\r\n        fontFamily: 'MarkerFelt-Thin',\r\n        fontSize: 28,\r\n      },\r\n      gestureEnabled: false,\r\n      headerLeft: () => (\r\n        <TouchableOpacity\r\n          onPress={\r\n            () => {\r\n              Alert.alert(\r\n                \"Are you sure you want to exit?\",\r\n                \"If you quit now, your score will not be saved!\",\r\n                [\r\n                  {\r\n                    text: \"Yes\",\r\n                    onPress: async () => {\r\n                      await AsyncStorage.removeItem(\"SAVEGAME\");\r\n                      this.props.navigation.navigate(\"Home\");\r\n                    },\r\n                  },\r\n                  {\r\n                    text: \"No\",\r\n                    onPress: () => console.log(\"no pressed\"),\r\n                  },\r\n                ],\r\n\r\n              );\r\n            }\r\n          }\r\n        >\r\n        <Image source={img_home} style={styles.homeButton} />\r\n        </TouchableOpacity>\r\n      ),\r\n    });\r\n  }\r\n\r\n  async saveNewScore(name, score){\r\n    // Max amount of scores to retain in high scores table\r\n    const entryLimit = 10;\r\n    var scores = JSON.parse(await AsyncStorage.getItem(\"SCORES\"));\r\n    var newScore = {\r\n      name: name,\r\n      score: score,\r\n    };\r\n    if(scores == null){\r\n      // scoreboard is empty - expects an array\r\n      await AsyncStorage.setItem(\"SCORES\", JSON.stringify([newScore]));\r\n    } else {\r\n      if(scores.length < entryLimit){\r\n        // score will be added where appropriate\r\n        for(let i = 0; i < scores.length; ++i){\r\n          if(newScore.score > scores[i].score){\r\n            scores.splice(i, 0, newScore);\r\n            break;\r\n          }\r\n        }\r\n        scores.push(newScore);\r\n      } else {\r\n        // score will only be added if it is greater than lowest score on table\r\n        // if not, it is discarded\r\n        // if added, discard lowest score\r\n        for(let i = 0; i < scores.length; ++i){\r\n          if(newScore.score > scores[i].score){\r\n            scores.splice(i, 0, newScore);\r\n            break;\r\n          }\r\n        }\r\n        if(scores.length > entryLimit){\r\n          scores.pop();\r\n        }\r\n      }\r\n\r\n      await AsyncStorage.setItem(\"SCORES\", JSON.stringify(scores));\r\n    }\r\n\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <View style={styles.entryScreen}>\r\n        <ImageBackground defaultSource={img_scorebg} style={{width: \"100%\", height: \"100%\"}}>\r\n          <Text style={styles.entryText}>Your Score: {this.props.route.params.score}</Text>\r\n          <TextInput\r\n            style={styles.entryInput}\r\n            maxLength={25}\r\n            placeholder=\"ENTER YOUR NAME HERE\"\r\n            onSubmitEditing={\r\n              async (event) => {\r\n                await this.saveNewScore(event.nativeEvent.text, this.props.route.params.score);\r\n                this.props.navigation.navigate(\"Scores\");\r\n              }\r\n            }\r\n          />\r\n          <Text style={styles.entryText}>Here are the items you found this game:</Text>\r\n          <FlatList\r\n            data={this.props.route.params.foundList}\r\n            renderItem={ ({ item, index }) => <Text style={styles.scoreRow}>{item.letter}{'\\t\\t\\t\\t'}{item.word}</Text> }\r\n            keyExtractor={item => item.letter}\r\n          />\r\n        </ImageBackground>\r\n      </View>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n// Stores & Shows high scores on a user's device\r\n// 1st implementation uses simple AsyncStorage\r\n// if time permits, we will use AWS DB for remote storage, which will allow\r\n// implementation of global high scores (not just per device)\r\nclass ScoreScreen extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\t\tthis.state = {\r\n\t\t\tscores: null,\r\n      bgColor: [\r\n        '#009FBA',\r\n        '#CAED60',\r\n        '#EB5B24',\r\n        '#FDEC8C',\r\n        '#F4885E',\r\n        '#79AAAF',\r\n        '#FCCC00',\r\n        '#EB5B24',\r\n        '#1D9911',\r\n        \r\n      ],\r\n      selectedColor:'#FFC0CB',\r\n\r\n\t};\r\n\r\n\t}\r\n\r\n\tasync componentDidMount(){\r\n    // await AsyncStorage.clear();\r\n    this.props.navigation.setOptions({\r\n      gestureEnabled: false,\r\n      headerLeft: () => (\r\n        <TouchableOpacity\r\n        onPress={() => {\r\n          this.props.navigation.navigate(\"Home\");\r\n        }}\r\n        >\r\n        <Image source={img_home} style={styles.homeButton} />\r\n        </TouchableOpacity>\r\n      ),\r\n    });\r\n\r\n\t\tthis._getRandomColor()\r\n\t\ttry{\r\n\t\t\tconst highScores = await AsyncStorage.getItem('SCORES');\r\n\t\t\tif (highScores != null){\r\n\t\t\t\tthis.setState({scores: JSON.parse(highScores)});\r\n\t\t\t\tconsole.log(\"DEBUG: Retrieval successful.\");\r\n\t\t\t} else {\r\n        console.log(\"DEBUG: Retrieval successful but null.\");\r\n      }\r\n\t\t} catch(error){\r\n\t\t\tconsole.error(`Error retrieving scores: ${error}`);\r\n\t\t}\r\n\r\n\t}\r\n\r\n  _getRandomColor(){\r\n    var item = this.state.bgColor[Math.floor(Math.random()*this.state.bgColor.length)];\r\n    var itemTwo = this.state.bgColor[Math.floor(Math.random()*this.state.bgColor.length)];\r\n    if(item != itemTwo){\r\n      this.setState({\r\n        selectedColor: item,\r\n      });\r\n    }\r\n  }\r\n\trender(){\r\n    if(this.state.scores != null){\r\n      // default - render high scores\r\n      return(\r\n        <View style={styles.entryScreen}>\r\n          <ImageBackground defaultSource={img_highestScorebg} style={{width: \"100%\", height: \"100%\",alignItems: \"center\"}}>\r\n          <Text style={styles.titleText}>High Scores</Text>\r\n          <FlatList\r\n            data={this.state.scores}\r\n            renderItem={ ({ item, index }) => <Text style={styles.scoreRow}>{index+1}. {item.name}{'\\t\\t\\t\\t'}{item.score}</Text> }\r\n            keyExtractor={ (item, index) => index.toString() }\r\n          />\r\n          </ImageBackground>\r\n        </View>\r\n      );\r\n    } else {\r\n      // no scores yet!\r\n      return(\r\n        <View style={styles.entryScreen}>\r\n           <ImageBackground defaultSource={img_highestScorebg} style={{width: \"100%\", height: \"100%\",alignItems: \"center\"}}>\r\n          <Text style={styles.titleText}>High Scores</Text>\r\n          <Text style={styles.noScores}>There are no scores yet. Play a game and get the first high score!</Text>\r\n          </ImageBackground>\r\n        </View>\r\n      );\r\n    }\r\n\r\n\t}\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n\r\n  },\r\n  titleImage: {\r\n    width: 300,\r\n    height: 200,\r\n    resizeMode:\"contain\",\r\n    marginTop: -100,\r\n    marginBottom: 100,\r\n  },\r\n\ttitleText: {\r\n\t\tfontSize: 42,\r\n\t\tfontWeight: 'bold',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center',\r\n\t\tmarginBottom: 20,\r\n\t\tfontFamily:'Arial Rounded MT Bold',\r\n\t},\r\n  playButton: {\r\n    width: 100,\r\n    height: 100,\r\n    resizeMode: \"contain\",\r\n    marginBottom: 10,\r\n  },\r\n  rulesButton: {\r\n    width: 100,\r\n    height: 100,\r\n    resizeMode: \"contain\",\r\n  },\r\n  scoresButton: {\r\n    width: 100,\r\n    height: 100,\r\n    resizeMode: \"contain\",\r\n    position: \"relative\",\r\n    bottom: -100,\r\n    left: 100\r\n  },\r\n\tbuttons: {\r\n\t\tbackgroundColor: 'orange',\r\n\t\tborderRadius: 10,\r\n\t\tmargin: 4,\r\n\t\tpadding: 5,\r\n\t\tborderColor: '#d19119',\r\n\t\tborderWidth: 2,\r\n\t},\r\n\tbuttonText: {\r\n\t\tfontSize: 38,\r\n\t\tfontFamily:'Arial Rounded MT Bold',\r\n\t},\r\n  rulesScreen: {\r\n    alignItems: 'center',\r\n  },\r\n  rulesTitle: {\r\n    fontSize: 38,\r\n    fontWeight: 'bold',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginBottom: 10,\r\n    fontFamily:'Arial Rounded MT Bold',\r\n    textDecorationLine: 'underline',\r\n  },\r\n  rulesText: {\r\n    fontSize: 24,\r\n    color: 'black',\r\n    textShadowColor: 'white',\r\n    textShadowOffset: {width: -1, height: 1},\r\n    textShadowRadius: 2,\r\n    fontFamily:'Arial Rounded MT Bold',\r\n    marginHorizontal:20\r\n  },\r\n  cameraScoreBoard: {\r\n    alignItems: 'center',\r\n  },\r\n  cameraScoreBoardText: {\r\n    fontSize: 70,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    fontFamily:'Arial Rounded MT Bold',\r\n    paddingRight: 10,\r\n    textTransform: 'capitalize'\r\n  },\r\n  cameraScoreBoardScoreText:{\r\n  \tfontSize: 35,\r\n  \tfontFamily:'Arial Rounded MT Bold',\r\n  },\r\n  takePicButton: {\r\n    width: 80,\r\n    height: 80,\r\n    resizeMode: \"contain\",\r\n    marginLeft: \"-22%\",\r\n    marginBottom: 30,\r\n  },\r\n  skipButton: {\r\n    width: 80,\r\n    height: 80,\r\n    resizeMode: \"contain\",\r\n    marginBottom: 30,\r\n    marginLeft: \"22%\",\r\n  },\r\n  homeButton: {\r\n    width: 40,\r\n    height: 40,\r\n    resizeMode: \"contain\",\r\n    marginLeft: 15,\r\n  },\r\n  entryScreen: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  entryText: {\r\n    fontFamily:'Arial Rounded MT Bold',\r\n    fontSize: 28,\r\n    padding: 20,\r\n    textShadowColor: 'white',\r\n    textShadowOffset: {\r\n      width: -1,\r\n      height: 1,\r\n    },\r\n    textShadowRadius: 2,\r\n  },\r\n  entryInput: {\r\n    fontFamily:'Arial Rounded MT Bold',\r\n    fontSize: 25,\r\n    borderColor: 'gray',\r\n    borderWidth: 1,\r\n    width: \"95%\",\r\n    marginLeft: \"2.5%\",\r\n    padding: 5,\r\n    backgroundColor: 'white',\r\n  },\r\n\tscoreRow: {\r\n  \tpadding: 5,\r\n  \tbackgroundColor: 'orange',\r\n  \tborderColor: 'black',\r\n  \tborderWidth: 1,\r\n    fontFamily:'Arial Rounded MT Bold',\r\n    fontSize: 28,\r\n\t},\r\n  noScores: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginBottom: 10,\r\n    fontFamily:'Arial Rounded MT Bold',\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}
